/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root.route'
import { Route as AdminRouteImport } from './routes/admin.route'
import { Route as IndexRouteImport } from './routes/index.route'
import { Route as AdminIndexRouteImport } from './routes/admin/index.route'
import { Route as AdminWorkExperienceRouteImport } from './routes/admin/work-experience.route'
import { Route as AdminWorkExperienceIndexRouteImport } from './routes/admin/work-experience/index.route'
import { Route as AdminWorkExperienceCreateRouteImport } from './routes/admin/work-experience/create.route'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRouteRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminWorkExperienceRouteRoute = AdminWorkExperienceRouteImport.update({
  id: '/work-experience',
  path: '/work-experience',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminWorkExperienceIndexRouteRoute =
  AdminWorkExperienceIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminWorkExperienceRouteRoute,
  } as any)

const AdminWorkExperienceCreateRouteRoute =
  AdminWorkExperienceCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AdminWorkExperienceRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/work-experience': {
      id: '/admin/work-experience'
      path: '/work-experience'
      fullPath: '/admin/work-experience'
      preLoaderRoute: typeof AdminWorkExperienceRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/work-experience/create': {
      id: '/admin/work-experience/create'
      path: '/create'
      fullPath: '/admin/work-experience/create'
      preLoaderRoute: typeof AdminWorkExperienceCreateRouteImport
      parentRoute: typeof AdminWorkExperienceRouteImport
    }
    '/admin/work-experience/': {
      id: '/admin/work-experience/'
      path: '/'
      fullPath: '/admin/work-experience/'
      preLoaderRoute: typeof AdminWorkExperienceIndexRouteImport
      parentRoute: typeof AdminWorkExperienceRouteImport
    }
  }
}

// Create and export the route tree

interface AdminWorkExperienceRouteRouteChildren {
  AdminWorkExperienceCreateRouteRoute: typeof AdminWorkExperienceCreateRouteRoute
  AdminWorkExperienceIndexRouteRoute: typeof AdminWorkExperienceIndexRouteRoute
}

const AdminWorkExperienceRouteRouteChildren: AdminWorkExperienceRouteRouteChildren =
  {
    AdminWorkExperienceCreateRouteRoute: AdminWorkExperienceCreateRouteRoute,
    AdminWorkExperienceIndexRouteRoute: AdminWorkExperienceIndexRouteRoute,
  }

const AdminWorkExperienceRouteRouteWithChildren =
  AdminWorkExperienceRouteRoute._addFileChildren(
    AdminWorkExperienceRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminWorkExperienceRouteRoute: typeof AdminWorkExperienceRouteRouteWithChildren
  AdminIndexRouteRoute: typeof AdminIndexRouteRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminWorkExperienceRouteRoute: AdminWorkExperienceRouteRouteWithChildren,
  AdminIndexRouteRoute: AdminIndexRouteRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/work-experience': typeof AdminWorkExperienceRouteRouteWithChildren
  '/admin/': typeof AdminIndexRouteRoute
  '/admin/work-experience/create': typeof AdminWorkExperienceCreateRouteRoute
  '/admin/work-experience/': typeof AdminWorkExperienceIndexRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/admin': typeof AdminIndexRouteRoute
  '/admin/work-experience/create': typeof AdminWorkExperienceCreateRouteRoute
  '/admin/work-experience': typeof AdminWorkExperienceIndexRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/work-experience': typeof AdminWorkExperienceRouteRouteWithChildren
  '/admin/': typeof AdminIndexRouteRoute
  '/admin/work-experience/create': typeof AdminWorkExperienceCreateRouteRoute
  '/admin/work-experience/': typeof AdminWorkExperienceIndexRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/work-experience'
    | '/admin/'
    | '/admin/work-experience/create'
    | '/admin/work-experience/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/admin/work-experience/create'
    | '/admin/work-experience'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/work-experience'
    | '/admin/'
    | '/admin/work-experience/create'
    | '/admin/work-experience/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.route.tsx",
      "children": [
        "/",
        "/admin"
      ]
    },
    "/": {
      "filePath": "index.route.tsx"
    },
    "/admin": {
      "filePath": "admin.route.tsx",
      "children": [
        "/admin/work-experience",
        "/admin/"
      ]
    },
    "/admin/work-experience": {
      "filePath": "admin/work-experience.route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/work-experience/create",
        "/admin/work-experience/"
      ]
    },
    "/admin/": {
      "filePath": "admin/index.route.tsx",
      "parent": "/admin"
    },
    "/admin/work-experience/create": {
      "filePath": "admin/work-experience/create.route.tsx",
      "parent": "/admin/work-experience"
    },
    "/admin/work-experience/": {
      "filePath": "admin/work-experience/index.route.tsx",
      "parent": "/admin/work-experience"
    }
  }
}
ROUTE_MANIFEST_END */
